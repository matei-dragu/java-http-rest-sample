// Using the "new" plugin mechanism introduced in Gradle 2.1
plugins {
    // Spring plugins: https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/html/
    id 'org.springframework.boot' version '2.0.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'

    // Standard Gradle plugins
    id 'java'
    id 'application'

    // 3rd party plugins
    id 'com.github.ben-manes.versions' version '0.17.0'
}
// TODO group + version
sourceCompatibility = 1.9

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.springframework.boot:spring-boot-starter-json'

    compile 'io.vavr:vavr:0.9.2'

    runtime 'com.h2database:h2'

    compileOnly "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.projectreactor:reactor-test'

    // Use JUnit 5: JUnit Jupiter + JUnit Vintage [for running JUnit 3/4 tests as well]
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly  'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly  'org.junit.vintage:junit-vintage-engine:5.1.0'
}

// Define the main class for the application
mainClassName = 'com.sampleapp.SampleApplicationMain'

test {
    useJUnitPlatform() // Use JUnit 5
}
